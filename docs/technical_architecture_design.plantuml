@startuml
skinparam componentStyle uml2

title Technical Architecture Design Diagram

actor Gardener
actor :Data Scientist:

package "pot-pourri" {

    package "mqtt-broker" #LightBlue {  
        [HiveMQ] as MQTTBroker
    }
    
    package "visualization" {
        [Grafana]
    }

    package "persistence" {
        [InfluxDB]
        [Telegraf]
    }

    package "metastore" {
        [Metastore]
    }

    package "webapp" {
        [Web App]
    }

    package "event-engine" #LightGrey {
        [Event Engine] #LightGrey
    }
}

package "pot-pourri-devices" {
    package "pot-monitoring-wifi" {
        () "Sensor"
        () "Actuator" #LightGrey
    }
}

:Data Scientist: --> [Grafana]
[Grafana] -[norank]-> [InfluxDB] : get data

[Sensor] --> [Telegraf] #CornflowerBlue : send value
[Telegraf] --> [InfluxDB] : set data

Gardener --> [Web App]
[Web App] -> [Metastore] : get/set meta data
[Web App] --> [Event Engine] : get/set events
[Web App] --> [InfluxDB] : get data

[Event Engine] -> [InfluxDB] : get data
[Event Engine] -> [Metastore] : get meta data
[Actuator] -> [Event Engine] #CornflowerBlue : request command

legend 
    - arrows are pointing from the calling element to the one that is being called
    - blue: MQTT communication conducted via MQTT Broker
    - grey: not implemented yet or work in progress
    'pot-pourri-devices can be found in a separate repository
    'Devices have to call other participants in order to allow energy savings with deep-sleep mode.
    'Deep-sleep mode might not be relevant for Actuators since they will need a lot more energy and therefore an external power supply.
endlegend
@enduml